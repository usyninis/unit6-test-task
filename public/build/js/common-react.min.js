(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Layout = require('./layout');

/*var Steps = {
  "Step1": require('./steps/Step1'),
  "Step2": require('./steps/Step2'),
  "Step3": require('./steps/Step3')
};*/
var Steps = {
  "index": require('./steps/index'),
  "1": require('./steps/step1'),
  "2": require('./steps/step2'),
  "3": require('./steps/step3')
};
 
module.exports = React.createClass({displayName: "exports",
  getInitialState: function () {
    return {
      step: 1,
      appData: {
        clients: [{}]
      }
    };
  },
  setStepIndex: function() {
    this.setState({step:0});
  },
  setStep: function(stepNumber,appData) {
    stepNumber = stepNumber>3 ? 3: (stepNumber<0?0:stepNumber);
    this.setState({step:stepNumber,appData:appData});
  },
  render: function() {
    //var step = Steps[this.state.step];
    //var step = Steps["Step"+this.state.step];
    /*var content = React.createElement(
      "Step1"
    );*/
    var content;
    if(this.state.step>0) {
      content = React.createElement(
          Steps[this.state.step],
          {setStep:this.setStep,appData:this.state.appData}
        );
    } else {
      content = React.createElement(
          Steps["index"],
          {setStep:this.setStep,appData:this.state.appData}
        );
    }
    //var s = "Step1";
  	return (
      React.createElement(Layout, {step: this.state.step}, 
       
           content
          
      )
  	);
  }

});

},{"./layout":5,"./steps/index":7,"./steps/step1":8,"./steps/step2":9,"./steps/step3":10}],2:[function(require,module,exports){
//var React = require('react');


var App = require('./app');




React.render(
  React.createElement(App, null),
  document.body
);

/* React.render(
  <Button />,
  document.getElementById("example2")
); */

//module.exports = MyDiv;

//
//sdsddfsdsf
//dfsdfssdsda
//
//dsfdssdf
},{"./app":1}],3:[function(require,module,exports){
module.exports = {

  isEmpty: function (obj) {

    // null and undefined are "empty"
    if (obj == null) return true;

    // Assume if it has a length property with a non-zero value
    // that that property is correct.
    if (obj.length > 0)    return false;
    if (obj.length === 0)  return true;

    // Otherwise, does it have any properties of its own?
    // Note that this doesn't handle
    // toString and valueOf enumeration bugs in IE < 9
    for (var key in obj) {
    	//console.log(key);
        if (hasOwnProperty.call(obj, key)) return false;
    }

    return true;
  },
  validateString: function(string,pattern) {  
	//var string = input.value;
    var validate = false;
	//console.log("string:"+string+" | pattern:"+pattern);
    //var rule = $(input).data("rule");
	//pattern = pattern || "";
	var rules = pattern.toString().split('|');
	var l = rules.length;
	
	rules.forEach(function(rule) {
	  //var rule = rules[i];
	  console.log(rule+" : "+string);
	  switch(rule) {

        case 'required': 
        validate = (undefined == typeof string || string.length == 0) ? false : true;        
        break;

        case 'email':
        var regExp = /^[\w-\.]+@[\w-]+\.[a-z]{2,10}$/i; 
        validate = regExp.test(string);        
        break;

        case 'phone':
        var regExp = /^\+\d[\d\(\)\ -]{4,20}\d$/; 
        validate = regExp.test(string);        
        break;

      }
      if( ! validate) {
        //$(input).addClass("error");         
        return false;
      }	
	});
	
	return validate;
	
  },
  validateError: null

}

},{}],4:[function(require,module,exports){
module.exports = {
	appName: "Личный кабинет"
}

},{}],5:[function(require,module,exports){
var Lang = require('./lang');
var Nav = require('./ui/nav');

module.exports = React.createClass({displayName: "exports",
  getDefaultProps: function() {
    return {
      step: 0
    };
  },
  getInitialState: function() {
    return {
      step: this.props.step
    };
  },
  componentWillReceiveProps: function(newProps) {
    if(newProps.step!=this.state.step) {
      this.setState({step:newProps.step});  
    }    
  },
  render: function() {

    var nav;
    if(this.state.step==0) {
      nav = React.createElement(Nav, null);
    }

  	return (
      React.createElement("div", {className: "s-app"}, 
        
        React.createElement("header", {className: "s-header"}, 
          React.createElement("div", {className: "s-content"}, 
            React.createElement("a", {className: "app-logo", href: "index.html"}, 
              React.createElement("div", {className: "icon-logo"})
            ), 
            React.createElement("div", {className: "app-name"}, 
              Lang.appName
            )
          )
        ), 
        
        nav, 

        this.props.children

      )
  	);
  }

});

},{"./lang":4,"./ui/nav":11}],6:[function(require,module,exports){
var DatePicker = React.createClass({displayName: "DatePicker",
  render: function() {
	moment.locale('ru');
    return (	
	  React.createElement("a", {className: "date-picker"}, 
		moment().format('L')
	  )
	);
  }
});

module.exports = React.createClass({displayName: "exports",
  getInitialState: function() {
    return {
      //formsCount: 1,
      oneDay: true,
    };
  },
  setOneDay: function(oneDay) {
    
    this.setState({oneDay:oneDay});
  },
  componentDidMount: function() {
  
	moment.locale('ru');
	
    var $dateStart = $(this.refs.dateStart.getDOMNode());
    var $dateEnd = $(this.refs.dateEnd.getDOMNode());
	
	$dateStart.val(moment().format("L"));
	$dateEnd.val(moment().add(1, "day").format("L"));
    /* if(this.refs.input) {
	 var $input = $(this.refs.dateStart.getDOMNode());
	
	 $input.mask("99.99.9999");
		
	 
	} */
	
	
  },
  render: function() {
    /*var field1 = {
        label: "ФИО",
        name: "name",
        type: "text",
      };*/
	/* var field_date_start = {
		name: "",
		label: "Дата начала",
		className: "form__row_w50 form__row_first",
		rule: "required|date",
		mask: "date",
	}   */
	  
    return (
      React.createElement("form", {className: "form"}, 
        React.createElement("div", {className: "form__row"}, 
        React.createElement("div", {className: "form__row form__row_w50 form__row_first"}, 
          React.createElement("label", {className: "form__row-label", for: "date_start"}, "date_start"), 
          React.createElement("input", {type: "text", className: "input form__row-input", ref: "dateStart", name: "date_start"})
        ), 
        React.createElement("div", {className: "form__row form__row_w50 form__row_last"}, 
          React.createElement("label", {className: "form__row-label", for: "date_end"}, "date_end"), 
          React.createElement("input", {type: "text", disabled: this.state.oneDay, ref: "dateEnd", className: "input form__row-input", name: "date_end"})
        )
        ), 
        React.createElement("div", {className: "form__row"}, 
			React.createElement(DatePicker, null)
        ), 
        React.createElement("div", {className: "form__row"}, 
          React.createElement("a", {className: "checkbox"+(this.state.oneDay?" checked":""), onClick: this.setOneDay.bind(null,true)}, 
            React.createElement("label", null, 
            React.createElement("input", {type: "checkbox"}), 
            React.createElement("div", {className: "checkbox__imit"}), 
            React.createElement("div", {className: "checkbox__label"}, "один день")
            )
          ), 
          React.createElement("a", {className: "checkbox"+(!this.state.oneDay?" checked":""), onClick: this.setOneDay.bind(null,false)}, 
            React.createElement("label", null, 
            React.createElement("input", {type: "checkbox"}), 
            React.createElement("div", {className: "checkbox__imit"}), 
            React.createElement("div", {className: "checkbox__label"}, "несколько дней")
            )
          )
        )
      )
    );
  }
});  

},{}],7:[function(require,module,exports){


module.exports = React.createClass({displayName: "exports",
  getInitialState: function () {
    return {
      //step: 1	
    };
  },
  getDefaultProps: function() {
    return {
      types: [
        {
          id: 1,
          name: "Посетители",
          icon: "type1",
          description: "Посетители description",
        },
        {
          id: 2,
          name: "Посетители и автомобили",
          icon: "type2",
          description: "Посетители description",
        },
        {
          id: 3,
          name: "Курьерская доставка",
          icon: "type3",
          description: "Посетители description",
        },
        {
          id: 4,
          name: "Ввоз и вывоз имущества",
          icon: "type4",
          description: "Посетители description",
        },
      ]
    };
  },
  componentDidMount: function() {
      var i = 0;
      $(".skip-type").each(function() {
        var $element = $(this);
        i+=10;
        setTimeout(function() {
          $element.addClass("skip-type_render");
        },10*i);
      });
    
    
  },
  nextStep: function(typeId) {
	if(typeId==1) {
		this.props.setStep(1,this.props.appData);
	}
  },
  render: function() {
    //console.log(this.props);
  	return (
      React.createElement("div", {className: "s-content"}, 
	  React.createElement("h2", {className: "title"}, "Тип пропуска"), 
      React.createElement("div", {className: "skip-types"}, 
        this.props.types.map(function(type) {
          return (
          React.createElement("div", {onClick: this.nextStep.bind(null,type.id), className: "skip-type"}, 
            React.createElement("div", {className: "skip-type__icon"}, 
              React.createElement("div", {className: "icon icon-inline icon-type"+type.id})
            ), 
            React.createElement("h3", {className: "skip-type__name"}, React.createElement("div", null, type.name)), 
            React.createElement("div", {className: "skip-type__description"}, type.description)
          )
          );
        }.bind(this))
      )
      )
  	);
  }

});

},{}],8:[function(require,module,exports){
var Helper = require('./../helper');

var FormRow = React.createClass({displayName: "FormRow",
  onFocus: function(e) {
    if(this.props.field.rule=='phone') {
      
    }
    //this.props.handlerOnInputChange(e);
  },
  componentDidMount: function() {
    if(this.refs.input) {
	  $(this.refs.input.getDOMNode()).mask();
	  var $input = $(this.refs.input.getDOMNode());
	  var mask = $input.data("masked");
	  /* if(mask) {
		$input.mask(mask);
	  } */
	  //console.log(mask);
	  switch(mask) {
	    case "phone":
		  var handlerOnInputChange = this.props.handlerOnInputChange;
		  $input.mask("+7 (999) 999-99-99",{
		    autoclear: false,
			placeholder: " ",
			completed: function() {
			  handlerOnInputChange(this);
			}
		  });
		break;
	    case "date":
		  $input.mask("00000-000",{autoclear:false});
		break;   
	  } 
	} 
  },
  render: function() {
    var field = this.props.field;
    var rowClassName = "form__row";
    if(field.className) {
      rowClassName+=" "+field.className;
    }
    return (
      React.createElement("div", {className: rowClassName}, 
        React.createElement("label", {className: "form__row-label", for: field.name}, field.label), 
        React.createElement("input", {type: field.type, ref: "input", "data-rule": field.rule, "data-masked": field.mask, className: "input form__row-input", onFocus: this.onFocus, onChange: this.props.handlerOnInputChange, name: field.name, defaultValue: this.props.value})
      )
    );
  }

});

var FormDate = require("./form-date");

var FormClient = React.createClass({displayName: "FormClient",
  propTypes: {
    client: React.PropTypes.object,
    handlerOnInputChange: React.PropTypes.function,
  },
  getInitialState: function() {
    return {
      client: this.props.client
    };
  },
  getDefaultProps: function() {
    return {
      fields: [{
        label: "ФИО",
        name: "name",
        type: "text",
        rule: "required"
      },{
        label: "Телефон",
        name: "phone",
        mask: "phone",
        type: "text",
        className: "form__row_w50 form__row_first",
        rule: "required|phone"
      },{
        label: "Почта",
        name: "email",
        //mask: "email",
        type: "text",
        className: "form__row_w50 form__row_last",
        rule: "required|email"
      },{
        label: "Компания посетителя",
        name: "company",
        type: "text",
        rule: "required"
      }]
    };
  },
  render: function() {
    
   /* var forms;
    for (var i = 0; i < this.state.formsCount; i++) {
      forms += this.props.fields.map(function(field) {
          return <FormRow field={field} />;
        });
    }*/
    var client = this.state.client;
    return (
      React.createElement("form", {className: "js-client-form"}, 
        this.props.fields.map(function(field) {
          //console.log(field);
          var value = client[field.name];
          return React.createElement(FormRow, {field: field, handlerOnInputChange: this.props.handlerOnInputChange, value: value});
        }.bind(this))
      )
    );
  }

});

module.exports = React.createClass({displayName: "exports",
  propTypes: {
    appData: React.PropTypes.object.required
  },
  getInitialState: function () {
   // var appData = this.props.appData;
	//if(!appData) {
	//if(!appData.clients) {
	 // appData.clients = [{}];
	//}
	//}
    return {
      //step: 1	
      appData: this.props.appData,
      //formsCount: 1,
      //clients: [
        //{}
      //]
    };
  },
  getDefaultProps: function() {
    return {
      
    };
  },
  validateInput: function(input) {
    //console.log("validate: "+mask);
    //console.log("validate-input: "+input);
    //if(!mask) return false;
	var $input = $(input);
	var string = $input.val();
	var pattern = $input.data("rule");
	
	return Helper.validateString(string,pattern);
	
    /* var string = input.value;
    var validate = false;
    var rule = $(input).data("rule");
    rule.split('|').map(function(rule) {
      
      switch(rule) {

        case 'required': 
        validate = (undefined == typeof string || string.length == 0) ? false : true;        
        break;

        case 'email':
        var regExp = /^[\w-\.]+@[\w-]+\.[a-z]{2,10}$/i; 
        validate = regExp.test(string);        
        break;

        case 'phone':
        var regExp = /^\+\d[\d\(\)\ -]{4,20}\d$/; 
        validate = regExp.test(string);        
        break;

      }
      if( ! validate) {
        //$(input).addClass("error");         
        return false;
      }
    }); */

    //$(input).removeClass("error");

    return validate;
  },
  nextStep: function() {
    
    var clients = [];
    $(".js-client-form").each(function() {
      var fields = $(this).serializeArray();
      var client = {};
      fields.map(function(field) {
        if( ! Helper.isEmpty(field.value)) {
          client[field.name] = field.value;
        }
      });
      
      if( ! Helper.isEmpty(client)) {
        clients.push(client);
        $(this).data("validate",true);  
      } else {
        $(this).data("validate",false);  
      }
          
    });

    if(Helper.isEmpty(clients)) {
      $(".js-client-form:first").data("validate",true);
    } 

    var errors;

    var validateInput = this.validateInput;

    $(".js-client-form").each(function() {
      var $form = $(this);
      if($form.data("validate")) {
        $form.find("input").each(function() {
          if(validateInput(this)) {
            
            $(this).removeClass("error");
          } else {
            errors = true;
            $(this).addClass("error");
          }
        });
      }
    });


    if(!errors) {
      var appData = {
        clients: clients,
      };
      this.props.setStep(2,appData);      
    }
  },
  handlerOnInputChange: function(e) {
    console.log(e.target);
    //this.validateInput(e.target,'required');
    if(this.validateInput(e.target)) {
      //errors = true;
      $(e.target).removeClass("error");
    } else {
      $(e.target).addClass("error");
    }
  },
  addClient: function() {
    var appData = this.state.appData;
    var clients = this.state.appData.clients;
    clients.push({});
    appData.clients = clients;
    this.setState({appData:appData});
  },
  render: function() {
    var forms = [];
    /*var form = (
      
    );*/
    /*for (var i = 0; i < this.state.formsCount; i++) {
      forms.push(<FormClient />);
    }*/
    this.state.appData.clients.map(function(client) {
     //console.log(client);
      forms.push(React.createElement(FormClient, {client: client, handlerOnInputChange: this.handlerOnInputChange}));
    }.bind(this));
    //forms.push(form);
    
  	return (
      React.createElement("section", {className: "s-step"}, 
      React.createElement("div", {className: "s-content"}, 
      React.createElement("div", {className: "s-content-step"}, 
        React.createElement("h2", {className: "title"}, "Данные посетителя"), 
        React.createElement("div", {className: "forms"}, 
          forms.map(function(form){
            return (
              React.createElement("div", {className: "forms__form"}, 
                form
              )
            );
          }), 
          React.createElement("a", {className: "forms__button-add", onClick: this.addClient}, "Добавить еще одного")
        ), 
        React.createElement("h2", {className: "title"}, "Дата"), 
        React.createElement("div", {className: "forms"}, 
          
            React.createElement(FormDate, null)
          
        ), 
        React.createElement("button", {className: "button", onClick: this.nextStep, type: "button"}, React.createElement("div", {className: "inner"}, "Продолжить"))
      )
      )
      )

  	);
  }

});

},{"./../helper":3,"./form-date":6}],9:[function(require,module,exports){
module.exports = React.createClass({displayName: "exports",
  propTypes: {
    appData: React.PropTypes.object.required
  },
  getInitialState: function () {
    return {
      //step: 1	
      appData: this.props.appData
    };
  },
  prevStep: function() {
    this.props.setStep(1,this.state.appData);
  },
  nextStep: function() {
    this.props.setStep(3);
  },
  render: function() {
   //var s = this.state.stepData;
   var clients = this.state.appData.clients;
   //if(clients = );
   return (

      React.createElement("section", {className: "s-step"}, 
      React.createElement("div", {className: "s-content"}, 
     
        
        
        React.createElement("div", {className: "forms"}, 
        clients.map(function(client) {
          return (
            React.createElement("div", null, 
              client.name, 
              client.company, 
              client.phone, 
              client.email
            )
          );
        })
        ), 
        React.createElement("button", {className: "button outline", onClick: this.prevStep, type: "button"}, "Назад"), 
        React.createElement("button", {className: "button", onClick: this.nextStep, type: "button"}, "Продолжить")
      
      )
      )
  	);
  }

});

},{}],10:[function(require,module,exports){
module.exports = React.createClass({displayName: "exports",
  getInitialState: function () {
    return {
      //step: 1	
    };
  },
  render: function() {
  	return (
      React.createElement("section", {className: "s-complete"}, 
        React.createElement("div", {className: "s-content"}, 
          "Готово", 
          React.createElement("div", {className: "icon-complete"})
        )
      )
  	);
  }
 
});

},{}],11:[function(require,module,exports){
module.exports = React.createClass({displayName: "exports",
  getInitialState: function () {
    return {
      items: [
        {url:"#",name:"Заказ пропуска"},
        {url:"#",name:"Действующие пропуска"},
        {url:"#",name:"Архив"},
      ]
    };
  }, 
  render: function() {
  	return (

      React.createElement("nav", {className: "s-nav"}, 
      React.createElement("div", {className: "s-content"}, 
        React.createElement("ul", {className: "main-nav clear"}, 
        this.state.items.map(function(item, i) {
          return (
            React.createElement("li", {key: i}, React.createElement("a", {className: "main-nav__item"+(i==0?" main-nav__item_active":""), href: item.url}, item.name))
          );
        })
        )
      )
      )
  	);
  }

});

},{}]},{},[2]);
